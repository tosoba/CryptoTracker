//
//  CurrencyDetailInteractor.swift
//  CryptoTracker
//
//  Created by merengue on 18/03/2018.
//  Copyright (c) 2018 merengue. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import RxSwift

final class CurrencyDetailInteractor {
    private let apiClient = APIClient()
    private let disposeBag = DisposeBag()
    
    private static let currencyHistoryBaseURL = URL(string: "https://min-api.cryptocompare.com/")!
}

// MARK: - Extensions -

extension CurrencyDetailInteractor: CurrencyDetailInteractorInterface {
    func loadHistory(for currency: Currency, onResult: @escaping (CurrencyHistoryResponse) -> Void) {
        let historyRequest = CurrencyHistoryRequest(with: [
            "fsym": currency.symbol,
            "tsym": "USD",
            "limit": "20",
            "aggregate": "1",
            "e": "CCCAGG"
        ])
        Observable
            .just(historyRequest)
            .flatMap { (request) -> Observable<CurrencyHistoryResponse> in
                return self.apiClient.send(apiRequest: request, url: CurrencyDetailInteractor.currencyHistoryBaseURL)
            }
            .subscribe { (event) in
                guard let data = event.element else {
                    print("No data.")
                    return
                }
                onResult(data)
            }
            .disposed(by: disposeBag)
    }
}
